require "runfile-tasks"
require "fileutils"
require "sla"
require "colsole"

include Colsole

title   "SLA Developer Toolkit"
summary "Runfile tasks for building the SLA gem"
version SLA::VERSION

RunfileTasks::RubyGems.all 'sla'
RunfileTasks::Testing.rspec
RunfileTasks::Docs.rdoc
RunfileTasks::Docker.all 'dannyben/sla', SLA::VERSION

help   "Run YARD server"
action :yard do
  system  "yard server -p3000 -B0.0.0.0 -r"
end

help   "Run IRB console"
action :console, :c do
  system  "bundle exec bin/console"
end

usage  "mockserver"
help   "Start the mock server"
action :mockserver do |args|
  system 'httpme mock'
end

help   "flush the spec cache"
action :flush do
  FileUtils.rm_f Dir["spec/cache/*"]
  say 'Flushed spec/cache/*'
  FileUtils.rm_f Dir["cache/*"]
  say 'Flushed cache/*'
end

usage  "sla -- COMMANDS..."
help   "run sla from source"
action :sla do |args|
  exec "bundle exec bin/sla #{args['COMMANDS'].join ' '}"
end

usage  "mock [-- OPTIONS...]"
help   "run against the localhost mock"
action :mock do |args|
  unless args['OPTIONS'].empty?
    options = args['OPTIONS'].join ' '
    options = " #{options}"
  end
  exec "bundle exec bin/sla localhost:3000 -c1#{options}"
end

usage  "hash URL"
help   "show cache hash for a URL"
action :hash do |args|
  say Digest::MD5.hexdigest args['URL']
end

help   "run the dev/test.rb script"
action :dev do
  Dir.chdir 'dev' do
    system  "bundle exec ruby test.rb"
  end
end

help   "run specs with and without cache, and prepare cache for CI"
action :fullspec do
  say "g`--> Flushing cache`"
  execute 'flush'
  
  say "g`--> Starting mock server`"
  execute 'server'
  
  say "g`--> Running tests and generating cache`"
  execute 'spec'

  say "g`--> Stopping mock server`"
  execute 'server stop'

  say "g`--> Running tests against cache`"
  execute 'spec'

  say "g`--> Done`"
end
